Dependency(ies)/jar that you need to add in class path are :

1. javaMail v-1.4.5

2. commons.collections-3.2.1.jar

3. commons_lang.jar
4. apache-velocity-velocity-1.5.jar

Here gmail SMTP server is used for mail as you can see in mail-settings.properties file :

mail-settings.properties

mail.smtp.starttls.enable=true
mail.smtp.host=smtp.gmail.com
mail.smtp.port=587
mail.smtp.auth=true
mail.user=kripalkashyap@gmail.com
mail.passwd=xxxxxxxxxxx

Create a template for your mail content :

mail-body-template.vm

<html>
<head>
<title></title>
</head>
<body>
This is a test mail body Mr. $fName $lName.<br/>
You may put HTML/text content here.
<br/>
<br/>
With best wishes,<br/>
$proprietor

</body>
</html>

Add an attachement in mail :

mail-attachement-template.txt

This is an attachment of mail.
Its been generated for testing purpose only.

Code to send mail :

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.StringWriter;
import java.util.Properties;

import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.Authenticator;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;

import org.apache.velocity.Template;
import org.apache.velocity.VelocityContext;
import org.apache.velocity.app.VelocityEngine;

public class SendMailWithVelocityTemplate {

public static void main(String[] args) {

String to = “kripalkashyap@gmail.com”;
String from = “kripalkashyap@gmail.com”;
final Properties prop = System.getProperties();

try {
prop.load(new FileInputStream(new File(“mail-settings.properties”)));
} catch (FileNotFoundException e) {
e.printStackTrace();
} catch (IOException e) {
e.printStackTrace();
}

Session session = Session.getDefaultInstance(prop,
new Authenticator() {

protected PasswordAuthentication getPasswordAuthentication() {
return new PasswordAuthentication(
prop.getProperty(“mail.user”), prop.getProperty(“mail.passwd”));
}
});

try{
// Creating default MIME message object
MimeMessage message = new MimeMessage(session);
message.setFrom(new InternetAddress(from));
message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));
message.setSubject(“Test mail through simple java API”);

BodyPart body = new MimeBodyPart();

// velocity stuff.

// Initialize velocity
VelocityEngine ve = new VelocityEngine();
ve.init();

/* next, get the Template */
Template t = ve.getTemplate( “mail-body-template.vm” );
/* create a context and add data */
VelocityContext context = new VelocityContext();
context.put(“fName”, “Kunal”);
context.put(“lName”, “kumar”);
context.put(“proprietor”, “Owner”);
/* now render the template into a StringWriter */
StringWriter out = new StringWriter();
t.merge( context, out );

// velocity stuff ends.

body.setContent(out.toString(), “text/html”);

Multipart multipart = new MimeMultipart();
multipart.addBodyPart(body);

body = new MimeBodyPart();

String filename = “mail-attachement-template.txt”;
DataSource source = new FileDataSource(filename);
body.setDataHandler(new DataHandler(source));
body.setFileName(“attachement”);
multipart.addBodyPart(body);

message.setContent(multipart, “text/html”);

// Send mail
Transport.send(message);

System.out.println(“Mail sent “);

}catch(Exception ex){
ex.printStackTrace();
}

}
}
